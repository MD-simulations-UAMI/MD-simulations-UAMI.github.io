{"version":3,"file":"7fc4339d8eab034a34b76125170695eed776065b-583bace34ce8f9615590.js","mappings":"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","sources":["webpack://gatsby-starter-henlo/./node_modules/camelcase/index.js","webpack://gatsby-starter-henlo/./node_modules/clsx/dist/clsx.m.js","webpack://gatsby-starter-henlo/./node_modules/gatsby-plugin-dark-mode/ThemeToggler.js","webpack://gatsby-starter-henlo/./node_modules/gatsby-plugin-dark-mode/index.js","webpack://gatsby-starter-henlo/../src/image-utils.ts","webpack://gatsby-starter-henlo/../src/components/hooks.ts","webpack://gatsby-starter-henlo/../src/components/layout-wrapper.tsx","webpack://gatsby-starter-henlo/../src/components/picture.tsx","webpack://gatsby-starter-henlo/../src/components/placeholder.tsx","webpack://gatsby-starter-henlo/../src/components/main-image.tsx","webpack://gatsby-starter-henlo/../src/components/gatsby-image.server.tsx","webpack://gatsby-starter-henlo/../src/components/gatsby-image.browser.tsx","webpack://gatsby-starter-henlo/../src/components/static-image.server.tsx","webpack://gatsby-starter-henlo/../src/components/static-image.tsx","webpack://gatsby-starter-henlo/./src/components/Head/DefaultHead.js","webpack://gatsby-starter-henlo/./src/components/Footer.js","webpack://gatsby-starter-henlo/./src/components/DarkmodeToggle.js","webpack://gatsby-starter-henlo/./src/components/Header.js","webpack://gatsby-starter-henlo/./src/components/Layout.js","webpack://gatsby-starter-henlo/./src/components/UI/Container.js","webpack://gatsby-starter-henlo/./src/resolvers/Link.js","webpack://gatsby-starter-henlo/./node_modules/@babel/runtime/helpers/defineProperty.js","webpack://gatsby-starter-henlo/./node_modules/@babel/runtime/helpers/toPrimitive.js","webpack://gatsby-starter-henlo/./node_modules/@babel/runtime/helpers/toPropertyKey.js","webpack://gatsby-starter-henlo/./node_modules/@babel/runtime/helpers/typeof.js"],"sourcesContent":["'use strict';\n\nconst UPPERCASE = /[\\p{Lu}]/u;\nconst LOWERCASE = /[\\p{Ll}]/u;\nconst LEADING_CAPITAL = /^[\\p{Lu}](?![\\p{Lu}])/gu;\nconst IDENTIFIER = /([\\p{Alpha}\\p{N}_]|$)/u;\nconst SEPARATORS = /[_.\\- ]+/;\nconst LEADING_SEPARATORS = new RegExp('^' + SEPARATORS.source);\nconst SEPARATORS_AND_IDENTIFIER = new RegExp(SEPARATORS.source + IDENTIFIER.source, 'gu');\nconst NUMBERS_AND_IDENTIFIER = new RegExp('\\\\d+' + IDENTIFIER.source, 'gu');\nconst preserveCamelCase = (string, toLowerCase, toUpperCase) => {\n  let isLastCharLower = false;\n  let isLastCharUpper = false;\n  let isLastLastCharUpper = false;\n  for (let i = 0; i < string.length; i++) {\n    const character = string[i];\n    if (isLastCharLower && UPPERCASE.test(character)) {\n      string = string.slice(0, i) + '-' + string.slice(i);\n      isLastCharLower = false;\n      isLastLastCharUpper = isLastCharUpper;\n      isLastCharUpper = true;\n      i++;\n    } else if (isLastCharUpper && isLastLastCharUpper && LOWERCASE.test(character)) {\n      string = string.slice(0, i - 1) + '-' + string.slice(i - 1);\n      isLastLastCharUpper = isLastCharUpper;\n      isLastCharUpper = false;\n      isLastCharLower = true;\n    } else {\n      isLastCharLower = toLowerCase(character) === character && toUpperCase(character) !== character;\n      isLastLastCharUpper = isLastCharUpper;\n      isLastCharUpper = toUpperCase(character) === character && toLowerCase(character) !== character;\n    }\n  }\n  return string;\n};\nconst preserveConsecutiveUppercase = (input, toLowerCase) => {\n  LEADING_CAPITAL.lastIndex = 0;\n  return input.replace(LEADING_CAPITAL, m1 => toLowerCase(m1));\n};\nconst postProcess = (input, toUpperCase) => {\n  SEPARATORS_AND_IDENTIFIER.lastIndex = 0;\n  NUMBERS_AND_IDENTIFIER.lastIndex = 0;\n  return input.replace(SEPARATORS_AND_IDENTIFIER, (_, identifier) => toUpperCase(identifier)).replace(NUMBERS_AND_IDENTIFIER, m => toUpperCase(m));\n};\nconst camelCase = (input, options) => {\n  if (!(typeof input === 'string' || Array.isArray(input))) {\n    throw new TypeError('Expected the input to be `string | string[]`');\n  }\n  options = {\n    pascalCase: false,\n    preserveConsecutiveUppercase: false,\n    ...options\n  };\n  if (Array.isArray(input)) {\n    input = input.map(x => x.trim()).filter(x => x.length).join('-');\n  } else {\n    input = input.trim();\n  }\n  if (input.length === 0) {\n    return '';\n  }\n  const toLowerCase = options.locale === false ? string => string.toLowerCase() : string => string.toLocaleLowerCase(options.locale);\n  const toUpperCase = options.locale === false ? string => string.toUpperCase() : string => string.toLocaleUpperCase(options.locale);\n  if (input.length === 1) {\n    return options.pascalCase ? toUpperCase(input) : toLowerCase(input);\n  }\n  const hasUpperCase = input !== toLowerCase(input);\n  if (hasUpperCase) {\n    input = preserveCamelCase(input, toLowerCase, toUpperCase);\n  }\n  input = input.replace(LEADING_SEPARATORS, '');\n  if (options.preserveConsecutiveUppercase) {\n    input = preserveConsecutiveUppercase(input, toLowerCase);\n  } else {\n    input = toLowerCase(input);\n  }\n  if (options.pascalCase) {\n    input = toUpperCase(input.charAt(0)) + input.slice(1);\n  }\n  return postProcess(input, toUpperCase);\n};\nmodule.exports = camelCase;\n// TODO: Remove this for the next major release\nmodule.exports.default = camelCase;","function r(e) {\n  var t,\n    f,\n    n = \"\";\n  if (\"string\" == typeof e || \"number\" == typeof e) n += e;else if (\"object\" == typeof e) if (Array.isArray(e)) for (t = 0; t < e.length; t++) e[t] && (f = r(e[t])) && (n && (n += \" \"), n += f);else for (t in e) e[t] && (n && (n += \" \"), n += t);\n  return n;\n}\nexport function clsx() {\n  for (var e, t, f = 0, n = \"\"; f < arguments.length;) (e = arguments[f++]) && (t = r(e)) && (n && (n += \" \"), n += t);\n  return n;\n}\nexport default clsx;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar _inheritsLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inheritsLoose\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar ThemeToggler = /*#__PURE__*/function (_React$Component) {\n  (0, _inheritsLoose2.default)(ThemeToggler, _React$Component);\n\n  function ThemeToggler() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"state\", {\n      theme: typeof window !== 'undefined' ? window.__theme : null\n    });\n    return _this;\n  }\n\n  var _proto = ThemeToggler.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    var _this2 = this;\n\n    window.__onThemeChange = function () {\n      _this2.setState({\n        theme: window.__theme\n      });\n    };\n  };\n\n  _proto.toggleTheme = function toggleTheme(theme) {\n    window.__setPreferredTheme(theme);\n  };\n\n  _proto.render = function render() {\n    return /*#__PURE__*/_react.default.createElement(this.props.children, {\n      theme: this.state.theme,\n      toggleTheme: this.toggleTheme\n    });\n  };\n\n  return ThemeToggler;\n}(_react.default.Component);\n\nThemeToggler.propTypes = {\n  children: _propTypes.default.func.isRequired\n};\nvar _default = ThemeToggler;\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nexports.__esModule = true;\n\nvar _ThemeToggler = _interopRequireDefault(require(\"./ThemeToggler\"));\n\nexports.ThemeToggler = _ThemeToggler.default;","import camelCase from \"camelcase\"\nimport type { IGatsbyImageData } from \"./index\"\n\nconst DEFAULT_PIXEL_DENSITIES = [0.25, 0.5, 1, 2]\nexport const DEFAULT_BREAKPOINTS = [750, 1080, 1366, 1920]\nexport const EVERY_BREAKPOINT = [\n  320, 654, 768, 1024, 1366, 1600, 1920, 2048, 2560, 3440, 3840, 4096,\n]\nconst DEFAULT_FLUID_WIDTH = 800\nconst DEFAULT_FIXED_WIDTH = 800\nconst DEFAULT_ASPECT_RATIO = 4 / 3\n\nexport type Fit = \"cover\" | \"fill\" | \"inside\" | \"outside\" | \"contain\"\n\nexport type Layout = \"fixed\" | \"fullWidth\" | \"constrained\"\nexport type ImageFormat = \"jpg\" | \"png\" | \"webp\" | \"avif\" | \"auto\" | \"\"\n\n/**\n * The minimal required reporter, as we don't want to import it from gatsby-cli\n */\nexport interface IReporter {\n  warn(message: string): void\n}\n\nexport interface ISharpGatsbyImageArgs {\n  layout?: Layout\n  formats?: Array<ImageFormat>\n  placeholder?: \"tracedSVG\" | \"dominantColor\" | \"blurred\" | \"none\"\n  tracedSVGOptions?: Record<string, unknown>\n  width?: number\n  height?: number\n  aspectRatio?: number\n  sizes?: string\n  quality?: number\n  transformOptions?: {\n    fit?: Fit\n    cropFocus?: number | string\n    duotone?: {\n      highlight: string\n      shadow: string\n      opacity?: number\n    }\n    grayscale?: boolean\n    rotate?: number\n    trim?: number\n  }\n  jpgOptions?: Record<string, unknown>\n  pngOptions?: Record<string, unknown>\n  webpOptions?: Record<string, unknown>\n  avifOptions?: Record<string, unknown>\n  blurredOptions?: { width?: number; toFormat?: ImageFormat }\n  breakpoints?: Array<number>\n  outputPixelDensities?: Array<number>\n  backgroundColor?: string\n}\n\nexport interface IImageSizeArgs {\n  width?: number\n  height?: number\n  layout?: Layout\n  filename: string\n  outputPixelDensities?: Array<number>\n  breakpoints?: Array<number>\n  fit?: Fit\n  reporter?: IReporter\n  sourceMetadata: { width: number; height: number }\n}\n\nexport interface IImageSizes {\n  sizes: Array<number>\n  presentationWidth: number\n  presentationHeight: number\n  aspectRatio: number\n  unscaledWidth: number\n}\n\nexport interface IImage {\n  src: string\n  width: number\n  height: number\n  format: ImageFormat\n}\n\nexport interface IGatsbyImageHelperArgs {\n  pluginName: string\n  generateImageSource: (\n    filename: string,\n    width: number,\n    height: number,\n    format: ImageFormat,\n    fit?: Fit,\n    options?: Record<string, unknown>\n  ) => IImage\n  layout?: Layout\n  formats?: Array<ImageFormat>\n  filename: string\n  placeholderURL?: string\n  width?: number\n  height?: number\n  sizes?: string\n  reporter?: IReporter\n  sourceMetadata?: { width: number; height: number; format: ImageFormat }\n  fit?: Fit\n  options?: Record<string, unknown>\n  breakpoints?: Array<number>\n  backgroundColor?: string\n  aspectRatio?: number\n}\n\nconst warn = (message: string): void => console.warn(message)\n\nconst sortNumeric = (a: number, b: number): number => a - b\n\nexport const getSizes = (width: number, layout: Layout): string | undefined => {\n  switch (layout) {\n    // If screen is wider than the max size, image width is the max size,\n    // otherwise it's the width of the screen\n    case `constrained`:\n      return `(min-width: ${width}px) ${width}px, 100vw`\n\n    // Image is always the same width, whatever the size of the screen\n    case `fixed`:\n      return `${width}px`\n\n    // Image is always the width of the screen\n    case `fullWidth`:\n      return `100vw`\n\n    default:\n      return undefined\n  }\n}\n\nexport const getSrcSet = (images: Array<IImage>): string =>\n  images.map(image => `${image.src} ${image.width}w`).join(`,\\n`)\n\nexport function formatFromFilename(filename: string): ImageFormat | undefined {\n  const dot = filename.lastIndexOf(`.`)\n  if (dot !== -1) {\n    const ext = filename.slice(dot + 1)\n    if (ext === `jpeg`) {\n      return `jpg`\n    }\n    if (ext.length === 3 || ext.length === 4) {\n      return ext as ImageFormat\n    }\n  }\n  return undefined\n}\n\nexport function setDefaultDimensions(\n  args: IGatsbyImageHelperArgs\n): IGatsbyImageHelperArgs {\n  let {\n    layout = `constrained`,\n    width,\n    height,\n    sourceMetadata,\n    breakpoints,\n    aspectRatio,\n    formats = [`auto`, `webp`],\n  } = args\n  formats = formats.map(format => format.toLowerCase() as ImageFormat)\n  layout = camelCase(layout) as Layout\n\n  if (width && height) {\n    return { ...args, formats, layout, aspectRatio: width / height }\n  }\n  if (sourceMetadata.width && sourceMetadata.height && !aspectRatio) {\n    aspectRatio = sourceMetadata.width / sourceMetadata.height\n  }\n\n  if (layout === `fullWidth`) {\n    width = width || sourceMetadata.width || breakpoints[breakpoints.length - 1]\n    height = height || Math.round(width / (aspectRatio || DEFAULT_ASPECT_RATIO))\n  } else {\n    if (!width) {\n      if (height && aspectRatio) {\n        width = height * aspectRatio\n      } else if (sourceMetadata.width) {\n        width = sourceMetadata.width\n      } else if (height) {\n        width = Math.round(height / DEFAULT_ASPECT_RATIO)\n      } else {\n        width = DEFAULT_FIXED_WIDTH\n      }\n    }\n\n    if (aspectRatio && !height) {\n      height = Math.round(width / aspectRatio)\n    } else if (!aspectRatio) {\n      aspectRatio = width / height\n    }\n  }\n  return { ...args, width, height, aspectRatio, layout, formats }\n}\n\n/**\n * Use this for getting an image for the blurred placeholder. This ensures the\n * aspect ratio and crop match the main image\n */\nexport function getLowResolutionImageURL(\n  args: IGatsbyImageHelperArgs,\n  width = 20\n): string {\n  args = setDefaultDimensions(args)\n  const { generateImageSource, filename, aspectRatio } = args\n  return generateImageSource(\n    filename,\n    width,\n    Math.round(width / aspectRatio),\n    args.sourceMetadata.format || `jpg`,\n    args.fit,\n    args.options\n  )?.src\n}\n\nexport function generateImageData(\n  args: IGatsbyImageHelperArgs\n): IGatsbyImageData {\n  args = setDefaultDimensions(args)\n\n  let {\n    pluginName,\n    sourceMetadata,\n    generateImageSource,\n    layout,\n    fit,\n    options,\n    width,\n    height,\n    filename,\n    reporter = { warn },\n    backgroundColor,\n    placeholderURL,\n  } = args\n\n  if (!pluginName) {\n    reporter.warn(\n      `[gatsby-plugin-image] \"generateImageData\" was not passed a plugin name`\n    )\n  }\n\n  if (typeof generateImageSource !== `function`) {\n    throw new Error(`generateImageSource must be a function`)\n  }\n\n  if (!sourceMetadata || (!sourceMetadata.width && !sourceMetadata.height)) {\n    // No metadata means we let the CDN handle max size etc, aspect ratio etc\n    sourceMetadata = {\n      width,\n      height,\n      format: sourceMetadata?.format || formatFromFilename(filename) || `auto`,\n    }\n  } else if (!sourceMetadata.format) {\n    sourceMetadata.format = formatFromFilename(filename)\n  }\n\n  const formats = new Set<ImageFormat>(args.formats)\n\n  if (formats.size === 0 || formats.has(`auto`) || formats.has(``)) {\n    formats.delete(`auto`)\n    formats.delete(``)\n    formats.add(sourceMetadata.format)\n  }\n\n  if (formats.has(`jpg`) && formats.has(`png`)) {\n    reporter.warn(\n      `[${pluginName}] Specifying both 'jpg' and 'png' formats is not supported. Using 'auto' instead`\n    )\n    if (sourceMetadata.format === `jpg`) {\n      formats.delete(`png`)\n    } else {\n      formats.delete(`jpg`)\n    }\n  }\n\n  const imageSizes = calculateImageSizes({ ...args, sourceMetadata })\n\n  const result: IGatsbyImageData[\"images\"] = {\n    sources: [],\n  }\n\n  let sizes = args.sizes\n  if (!sizes) {\n    sizes = getSizes(imageSizes.presentationWidth, layout)\n  }\n\n  formats.forEach(format => {\n    const images = imageSizes.sizes\n      .map(size => {\n        const imageSrc = generateImageSource(\n          filename,\n          size,\n          Math.round(size / imageSizes.aspectRatio),\n          format,\n          fit,\n          options\n        )\n        if (\n          !imageSrc?.width ||\n          !imageSrc.height ||\n          !imageSrc.src ||\n          !imageSrc.format\n        ) {\n          reporter.warn(\n            `[${pluginName}] The resolver for image ${filename} returned an invalid value.`\n          )\n          return undefined\n        }\n        return imageSrc\n      })\n      .filter(Boolean)\n\n    if (format === `jpg` || format === `png` || format === `auto`) {\n      const unscaled =\n        images.find(img => img.width === imageSizes.unscaledWidth) || images[0]\n\n      if (unscaled) {\n        result.fallback = {\n          src: unscaled.src,\n          srcSet: getSrcSet(images),\n          sizes,\n        }\n      }\n    } else {\n      result.sources?.push({\n        srcSet: getSrcSet(images),\n        sizes,\n        type: `image/${format}`,\n      })\n    }\n  })\n\n  const imageProps: Partial<IGatsbyImageData> = {\n    images: result,\n    layout,\n    backgroundColor,\n  }\n\n  if (placeholderURL) {\n    imageProps.placeholder = { fallback: placeholderURL }\n  }\n\n  switch (layout) {\n    case `fixed`:\n      imageProps.width = imageSizes.presentationWidth\n      imageProps.height = imageSizes.presentationHeight\n      break\n\n    case `fullWidth`:\n      imageProps.width = 1\n      imageProps.height = 1 / imageSizes.aspectRatio\n      break\n\n    case `constrained`:\n      imageProps.width = args.width || imageSizes.presentationWidth || 1\n      imageProps.height = (imageProps.width || 1) / imageSizes.aspectRatio\n  }\n\n  return imageProps as IGatsbyImageData\n}\n\nconst dedupeAndSortDensities = (values: Array<number>): Array<number> =>\n  Array.from(new Set([1, ...values])).sort(sortNumeric)\n\nexport function calculateImageSizes(args: IImageSizeArgs): IImageSizes {\n  const {\n    width,\n    height,\n    filename,\n    layout = `constrained`,\n    sourceMetadata: imgDimensions,\n    reporter = { warn },\n    breakpoints = DEFAULT_BREAKPOINTS,\n  } = args\n\n  // check that all dimensions provided are positive\n  const userDimensions = { width, height }\n  const erroneousUserDimensions = Object.entries(userDimensions).filter(\n    ([_, size]) => typeof size === `number` && size < 1\n  )\n  if (erroneousUserDimensions.length) {\n    throw new Error(\n      `Specified dimensions for images must be positive numbers (> 0). Problem dimensions you have are ${erroneousUserDimensions\n        .map(dim => dim.join(`: `))\n        .join(`, `)}`\n    )\n  }\n\n  if (layout === `fixed`) {\n    return fixedImageSizes(args)\n  } else if (layout === `constrained`) {\n    return responsiveImageSizes(args)\n  } else if (layout === `fullWidth`) {\n    return responsiveImageSizes({ breakpoints, ...args })\n  } else {\n    reporter.warn(\n      `No valid layout was provided for the image at ${filename}. Valid image layouts are fixed, fullWidth, and constrained. Found ${layout}`\n    )\n    return {\n      sizes: [imgDimensions.width],\n      presentationWidth: imgDimensions.width,\n      presentationHeight: imgDimensions.height,\n      aspectRatio: imgDimensions.width / imgDimensions.height,\n      unscaledWidth: imgDimensions.width,\n    }\n  }\n}\nexport function fixedImageSizes({\n  filename,\n  sourceMetadata: imgDimensions,\n  width,\n  height,\n  fit = `cover`,\n  outputPixelDensities = DEFAULT_PIXEL_DENSITIES,\n  reporter = { warn },\n}: IImageSizeArgs): IImageSizes {\n  let aspectRatio = imgDimensions.width / imgDimensions.height\n  // Sort, dedupe and ensure there's a 1\n  const densities = dedupeAndSortDensities(outputPixelDensities)\n\n  // If both are provided then we need to check the fit\n  if (width && height) {\n    const calculated = getDimensionsAndAspectRatio(imgDimensions, {\n      width,\n      height,\n      fit,\n    })\n    width = calculated.width\n    height = calculated.height\n    aspectRatio = calculated.aspectRatio\n  }\n\n  if (!width) {\n    if (!height) {\n      width = DEFAULT_FIXED_WIDTH\n    } else {\n      width = Math.round(height * aspectRatio)\n    }\n  } else if (!height) {\n    height = Math.round(width / aspectRatio)\n  }\n\n  const originalWidth = width // will use this for presentationWidth, don't want to lose it\n  const isTopSizeOverriden =\n    imgDimensions.width < width || imgDimensions.height < (height as number)\n\n  // If the image is smaller than requested, warn the user that it's being processed as such\n  // print out this message with the necessary information before we overwrite it for sizing\n  if (isTopSizeOverriden) {\n    const fixedDimension = imgDimensions.width < width ? `width` : `height`\n    reporter.warn(`\nThe requested ${fixedDimension} \"${\n      fixedDimension === `width` ? width : height\n    }px\" for the image ${filename} was larger than the actual image ${fixedDimension} of ${\n      imgDimensions[fixedDimension]\n    }px. If possible, replace the current image with a larger one.`)\n\n    if (fixedDimension === `width`) {\n      width = imgDimensions.width\n      height = Math.round(width / aspectRatio)\n    } else {\n      height = imgDimensions.height\n      width = height * aspectRatio\n    }\n  }\n\n  const sizes = densities\n    .filter(size => size >= 1) // remove smaller densities because fixed images don't need them\n    .map(density => Math.round(density * (width as number)))\n    .filter(size => size <= imgDimensions.width)\n\n  return {\n    sizes,\n    aspectRatio,\n    presentationWidth: originalWidth,\n    presentationHeight: Math.round(originalWidth / aspectRatio),\n    unscaledWidth: width,\n  }\n}\n\nexport function responsiveImageSizes({\n  sourceMetadata: imgDimensions,\n  width,\n  height,\n  fit = `cover`,\n  outputPixelDensities = DEFAULT_PIXEL_DENSITIES,\n  breakpoints,\n  layout,\n}: IImageSizeArgs): IImageSizes {\n  let sizes\n  let aspectRatio = imgDimensions.width / imgDimensions.height\n  // Sort, dedupe and ensure there's a 1\n  const densities = dedupeAndSortDensities(outputPixelDensities)\n\n  // If both are provided then we need to check the fit\n  if (width && height) {\n    const calculated = getDimensionsAndAspectRatio(imgDimensions, {\n      width,\n      height,\n      fit,\n    })\n    width = calculated.width\n    height = calculated.height\n    aspectRatio = calculated.aspectRatio\n  }\n\n  // Case 1: width of height were passed in, make sure it isn't larger than the actual image\n  width = width && Math.min(width, imgDimensions.width)\n  height = height && Math.min(height, imgDimensions.height)\n\n  // Case 2: neither width or height were passed in, use default size\n  if (!width && !height) {\n    width = Math.min(DEFAULT_FLUID_WIDTH, imgDimensions.width)\n    height = width / aspectRatio\n  }\n\n  // if it still hasn't been found, calculate width from the derived height.\n  // TS isn't smart enough to realise the type for height has been narrowed here\n  if (!width) {\n    width = (height as number) * aspectRatio\n  }\n\n  const originalWidth = width\n  const isTopSizeOverriden =\n    imgDimensions.width < width || imgDimensions.height < (height as number)\n  if (isTopSizeOverriden) {\n    width = imgDimensions.width\n    height = imgDimensions.height\n  }\n\n  width = Math.round(width)\n\n  if (breakpoints?.length > 0) {\n    sizes = breakpoints.filter(size => size <= imgDimensions.width)\n\n    // If a larger breakpoint has been filtered-out, add the actual image width instead\n    if (\n      sizes.length < breakpoints.length &&\n      !sizes.includes(imgDimensions.width)\n    ) {\n      sizes.push(imgDimensions.width)\n    }\n  } else {\n    sizes = densities.map(density => Math.round(density * (width as number)))\n    sizes = sizes.filter(size => size <= imgDimensions.width)\n  }\n\n  // ensure that the size passed in is included in the final output\n  if (layout === `constrained` && !sizes.includes(width)) {\n    sizes.push(width)\n  }\n  sizes = sizes.sort(sortNumeric)\n  return {\n    sizes,\n    aspectRatio,\n    presentationWidth: originalWidth,\n    presentationHeight: Math.round(originalWidth / aspectRatio),\n    unscaledWidth: width,\n  }\n}\n\nexport function getDimensionsAndAspectRatio(\n  dimensions,\n  options\n): { width: number; height: number; aspectRatio: number } {\n  // Calculate the eventual width/height of the image.\n  const imageAspectRatio = dimensions.width / dimensions.height\n\n  let width = options.width\n  let height = options.height\n\n  switch (options.fit) {\n    case `fill`: {\n      width = options.width ? options.width : dimensions.width\n      height = options.height ? options.height : dimensions.height\n      break\n    }\n    case `inside`: {\n      const widthOption = options.width\n        ? options.width\n        : Number.MAX_SAFE_INTEGER\n      const heightOption = options.height\n        ? options.height\n        : Number.MAX_SAFE_INTEGER\n\n      width = Math.min(widthOption, Math.round(heightOption * imageAspectRatio))\n      height = Math.min(\n        heightOption,\n        Math.round(widthOption / imageAspectRatio)\n      )\n      break\n    }\n    case `outside`: {\n      const widthOption = options.width ? options.width : 0\n      const heightOption = options.height ? options.height : 0\n\n      width = Math.max(widthOption, Math.round(heightOption * imageAspectRatio))\n      height = Math.max(\n        heightOption,\n        Math.round(widthOption / imageAspectRatio)\n      )\n      break\n    }\n\n    default: {\n      if (options.width && !options.height) {\n        width = options.width\n        height = Math.round(options.width / imageAspectRatio)\n      }\n\n      if (options.height && !options.width) {\n        width = Math.round(options.height * imageAspectRatio)\n        height = options.height\n      }\n    }\n  }\n\n  return {\n    width,\n    height,\n    aspectRatio: width / height,\n  }\n}\n","/* global GATSBY___IMAGE */\nimport { generateImageData, EVERY_BREAKPOINT } from \"../image-utils\"\nimport type { CSSProperties, HTMLAttributes, ImgHTMLAttributes } from \"react\"\nimport type { Node } from \"gatsby\"\nimport type { PlaceholderProps } from \"./placeholder\"\nimport type { MainImageProps } from \"./main-image\"\nimport type { IGatsbyImageData } from \"./gatsby-image.browser\"\nimport type {\n  IGatsbyImageHelperArgs,\n  Layout,\n  IImage,\n  ImageFormat,\n} from \"../image-utils\"\n\n// Native lazy-loading support: https://addyosmani.com/blog/lazy-loading/\nexport const hasNativeLazyLoadSupport = (): boolean =>\n  typeof HTMLImageElement !== `undefined` &&\n  `loading` in HTMLImageElement.prototype\n\nexport function gatsbyImageIsInstalled(): boolean {\n  return typeof GATSBY___IMAGE !== `undefined` && GATSBY___IMAGE\n}\n\nexport type IGatsbyImageDataParent<T = never> = T & {\n  gatsbyImageData: IGatsbyImageData\n}\nexport type IGatsbyImageParent<T = never> = T & {\n  gatsbyImage: IGatsbyImageData\n}\nexport type FileNode = Partial<Node> & {\n  childImageSharp?: IGatsbyImageDataParent<Partial<Node>>\n}\n\nconst isGatsbyImageData = (\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageData | any\n): node is IGatsbyImageData =>\n  // 🦆 check for a deep prop to be sure this is a valid gatsbyImageData object\n  Boolean(node?.images?.fallback?.src)\n\nconst isGatsbyImageDataParent = <T>(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageDataParent<T> | any\n): node is IGatsbyImageDataParent<T> => Boolean(node?.gatsbyImageData)\n\nconst isGatsbyImageParent = <T>(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageParent<T> | any\n): node is IGatsbyImageParent<T> => Boolean(node?.gatsbyImage)\n\nexport type ImageDataLike =\n  | FileNode\n  | IGatsbyImageDataParent\n  | IGatsbyImageParent\n  | IGatsbyImageData\n\nexport const getImage = (\n  node: ImageDataLike | null\n): IGatsbyImageData | undefined => {\n  // This checks both for gatsbyImageData and gatsbyImage\n  if (isGatsbyImageData(node)) {\n    return node\n  }\n  // gatsbyImageData GraphQL field\n  if (isGatsbyImageDataParent(node)) {\n    return node.gatsbyImageData\n  }\n  // gatsbyImage GraphQL field for Gatsby's Image CDN service\n  if (isGatsbyImageParent(node)) {\n    return node.gatsbyImage\n  }\n  return node?.childImageSharp?.gatsbyImageData\n}\n\nexport const getSrc = (node: ImageDataLike): string | undefined =>\n  getImage(node)?.images?.fallback?.src\n\nexport const getSrcSet = (node: ImageDataLike): string | undefined =>\n  getImage(node)?.images?.fallback?.srcSet\n\nexport function getWrapperProps(\n  width: number,\n  height: number,\n  layout: Layout\n): Pick<HTMLAttributes<HTMLElement>, \"className\" | \"style\"> & {\n  \"data-gatsby-image-wrapper\": string\n} {\n  const wrapperStyle: CSSProperties = {}\n\n  let className = `gatsby-image-wrapper`\n\n  // If the plugin isn't installed we need to apply the styles inline\n  if (!gatsbyImageIsInstalled()) {\n    wrapperStyle.position = `relative`\n    wrapperStyle.overflow = `hidden`\n  }\n\n  if (layout === `fixed`) {\n    wrapperStyle.width = width\n    wrapperStyle.height = height\n  } else if (layout === `constrained`) {\n    if (!gatsbyImageIsInstalled()) {\n      wrapperStyle.display = `inline-block`\n      wrapperStyle.verticalAlign = `top`\n    }\n    className = `gatsby-image-wrapper gatsby-image-wrapper-constrained`\n  }\n\n  return {\n    className,\n    \"data-gatsby-image-wrapper\": ``,\n    style: wrapperStyle,\n  }\n}\n\nexport interface IUrlBuilderArgs<OptionsType> {\n  width: number\n  height: number\n  baseUrl: string\n  format: ImageFormat\n  options: OptionsType\n}\nexport interface IGetImageDataArgs<OptionsType = Record<string, unknown>> {\n  baseUrl: string\n  /**\n   * For constrained and fixed images, the size of the image element\n   */\n  width?: number\n  height?: number\n  /**\n   * If available, pass the source image width and height\n   */\n  sourceWidth?: number\n  sourceHeight?: number\n  /**\n   * If only one dimension is passed, then this will be used to calculate the other.\n   */\n  aspectRatio?: number\n  layout?: Layout\n  /**\n   * Returns a URL based on the passed arguments. Should be a pure function\n   */\n  urlBuilder: (args: IUrlBuilderArgs<OptionsType>) => string\n\n  /**\n   * Should be a data URI\n   */\n  placeholderURL?: string\n  backgroundColor?: string\n  /**\n   * Used in error messages etc\n   */\n  pluginName?: string\n\n  /**\n   * If you do not support auto-format, pass an array of image types here\n   */\n  formats?: Array<ImageFormat>\n\n  breakpoints?: Array<number>\n\n  /**\n   * Passed to the urlBuilder function\n   */\n  options?: OptionsType\n}\n\n/**\n * Use this hook to generate gatsby-plugin-image data in the browser.\n */\nexport function getImageData<OptionsType>({\n  baseUrl,\n  urlBuilder,\n  sourceWidth,\n  sourceHeight,\n  pluginName = `getImageData`,\n  formats = [`auto`],\n  breakpoints,\n  options,\n  ...props\n}: IGetImageDataArgs<OptionsType>): IGatsbyImageData {\n  if (\n    !breakpoints?.length &&\n    (props.layout === `fullWidth` || (props.layout as string) === `FULL_WIDTH`)\n  ) {\n    breakpoints = EVERY_BREAKPOINT\n  }\n  const generateImageSource = (\n    baseUrl: string,\n    width: number,\n    height?: number,\n    format?: ImageFormat\n  ): IImage => {\n    return {\n      width,\n      height,\n      format,\n      src: urlBuilder({ baseUrl, width, height, options, format }),\n    }\n  }\n\n  const sourceMetadata: IGatsbyImageHelperArgs[\"sourceMetadata\"] = {\n    width: sourceWidth,\n    height: sourceHeight,\n    format: `auto`,\n  }\n\n  const args: IGatsbyImageHelperArgs = {\n    ...props,\n    pluginName,\n    generateImageSource,\n    filename: baseUrl,\n    formats,\n    breakpoints,\n    sourceMetadata,\n  }\n  return generateImageData(args)\n}\n\nexport function getMainProps(\n  isLoading: boolean,\n  isLoaded: boolean,\n  images: IGatsbyImageData[\"images\"],\n  loading?: \"eager\" | \"lazy\",\n  style: CSSProperties = {}\n): Partial<MainImageProps> {\n  // fallback when it's not configured in gatsby-config.\n  if (!gatsbyImageIsInstalled()) {\n    style = {\n      height: `100%`,\n      left: 0,\n      position: `absolute`,\n      top: 0,\n      transform: `translateZ(0)`,\n      transition: `opacity 250ms linear`,\n      width: `100%`,\n      willChange: `opacity`,\n      ...style,\n    }\n  }\n\n  const result = {\n    ...images,\n    loading,\n    shouldLoad: isLoading,\n    \"data-main-image\": ``,\n    style: {\n      ...style,\n      opacity: isLoaded ? 1 : 0,\n    },\n  }\n\n  return result\n}\n\nexport type PlaceholderImageAttrs = ImgHTMLAttributes<HTMLImageElement> &\n  Pick<PlaceholderProps, \"sources\" | \"fallback\"> & {\n    \"data-placeholder-image\"?: string\n  }\n\nexport function getPlaceholderProps(\n  placeholder: PlaceholderImageAttrs | undefined,\n  isLoaded: boolean,\n  layout: Layout,\n  width?: number,\n  height?: number,\n  backgroundColor?: string,\n  objectFit?: CSSProperties[\"objectFit\"],\n  objectPosition?: CSSProperties[\"objectPosition\"]\n): PlaceholderImageAttrs {\n  const wrapperStyle: CSSProperties = {}\n\n  if (backgroundColor) {\n    wrapperStyle.backgroundColor = backgroundColor\n\n    if (layout === `fixed`) {\n      wrapperStyle.width = width\n      wrapperStyle.height = height\n      wrapperStyle.backgroundColor = backgroundColor\n      wrapperStyle.position = `relative`\n    } else if (layout === `constrained`) {\n      wrapperStyle.position = `absolute`\n      wrapperStyle.top = 0\n      wrapperStyle.left = 0\n      wrapperStyle.bottom = 0\n      wrapperStyle.right = 0\n    } else if (layout === `fullWidth`) {\n      wrapperStyle.position = `absolute`\n      wrapperStyle.top = 0\n      wrapperStyle.left = 0\n      wrapperStyle.bottom = 0\n      wrapperStyle.right = 0\n    }\n  }\n\n  if (objectFit) {\n    wrapperStyle.objectFit = objectFit\n  }\n\n  if (objectPosition) {\n    wrapperStyle.objectPosition = objectPosition\n  }\n  const result: PlaceholderImageAttrs = {\n    ...placeholder,\n    \"aria-hidden\": true,\n    \"data-placeholder-image\": ``,\n    style: {\n      opacity: isLoaded ? 0 : 1,\n      transition: `opacity 500ms linear`,\n      ...wrapperStyle,\n    },\n  }\n\n  // fallback when it's not configured in gatsby-config.\n  if (!gatsbyImageIsInstalled()) {\n    result.style = {\n      height: `100%`,\n      left: 0,\n      position: `absolute`,\n      top: 0,\n      width: `100%`,\n    }\n  }\n\n  return result\n}\n\nexport interface IArtDirectedImage {\n  media: string\n  image: IGatsbyImageData\n}\n\n/**\n * Generate a Gatsby image data object with multiple, art-directed images that display at different\n * resolutions.\n *\n * @param defaultImage The image displayed when no media query matches.\n * It is also used for all other settings applied to the image, such as width, height and layout.\n * You should pass a className to the component with media queries to adjust the size of the container,\n * as this cannot be adjusted automatically.\n * @param artDirected Array of objects which each contains a `media` string which is a media query\n * such as `(min-width: 320px)`, and the image object to use when that query matches.\n */\nexport function withArtDirection(\n  defaultImage: IGatsbyImageData,\n  artDirected: Array<IArtDirectedImage>\n): IGatsbyImageData {\n  const { images, placeholder, ...props } = defaultImage\n  const output: IGatsbyImageData = {\n    ...props,\n    images: {\n      ...images,\n      sources: [],\n    },\n    placeholder: placeholder && {\n      ...placeholder,\n      sources: [],\n    },\n  }\n\n  artDirected.forEach(({ media, image }) => {\n    if (!media) {\n      if (process.env.NODE_ENV === `development`) {\n        console.warn(\n          \"[gatsby-plugin-image] All art-directed images passed to must have a value set for `media`. Skipping.\"\n        )\n      }\n      return\n    }\n\n    if (\n      image.layout !== defaultImage.layout &&\n      process.env.NODE_ENV === `development`\n    ) {\n      console.warn(\n        `[gatsby-plugin-image] Mismatched image layout: expected \"${defaultImage.layout}\" but received \"${image.layout}\". All art-directed images use the same layout as the default image`\n      )\n    }\n\n    output.images.sources.push(\n      ...image.images.sources.map(source => {\n        return { ...source, media }\n      }),\n      {\n        media,\n        srcSet: image.images.fallback.srcSet,\n      }\n    )\n\n    if (!output.placeholder) {\n      return\n    }\n\n    output.placeholder.sources.push({\n      media,\n      srcSet: image.placeholder.fallback,\n    })\n  })\n  output.images.sources.push(...images.sources)\n  if (placeholder?.sources) {\n    output.placeholder?.sources.push(...placeholder.sources)\n  }\n  return output\n}\n","import React, { Fragment, FunctionComponent, PropsWithChildren } from \"react\"\nimport terserMacro from \"../../macros/terser.macro\"\nimport { Layout } from \"../image-utils\"\n\nexport interface ILayoutWrapperProps {\n  layout: Layout\n  width: number\n  height: number\n}\n\nconst NativeScriptLoading: FunctionComponent = () => (\n  <script\n    type=\"module\"\n    dangerouslySetInnerHTML={{\n      __html: terserMacro`\nconst hasNativeLazyLoadSupport = typeof HTMLImageElement !== \"undefined\" && \"loading\" in HTMLImageElement.prototype;\nif (hasNativeLazyLoadSupport) {\n  const gatsbyImages = document.querySelectorAll('img[data-main-image]');\n  for (let mainImage of gatsbyImages) {\n    if (mainImage.dataset.src) {\n      mainImage.setAttribute('src', mainImage.dataset.src)\n      mainImage.removeAttribute('data-src')\n    }\n    if (mainImage.dataset.srcset) {\n      mainImage.setAttribute('srcset', mainImage.dataset.srcset)\n      mainImage.removeAttribute('data-srcset')\n    }\n\n    const sources = mainImage.parentNode.querySelectorAll('source[data-srcset]');\n    for (let source of sources) {\n      source.setAttribute('srcset', source.dataset.srcset)\n      source.removeAttribute('data-srcset')\n    }\n\n    if (mainImage.complete) {\n      mainImage.style.opacity = 1;\n\n      // also hide the placeholder\n      mainImage.parentNode.parentNode.querySelector('[data-placeholder-image]').style.opacity = 0;\n    }\n  }\n}\n`,\n    }}\n  />\n)\n\nexport function getSizer(\n  layout: Layout,\n  width: number,\n  height: number\n): string {\n  let sizer = ``\n  if (layout === `fullWidth`) {\n    sizer = `<div aria-hidden=\"true\" style=\"padding-top: ${\n      (height / width) * 100\n    }%;\"></div>`\n  }\n\n  if (layout === `constrained`) {\n    sizer = `<div style=\"max-width: ${width}px; display: block;\"><img alt=\"\" role=\"presentation\" aria-hidden=\"true\" src=\"data:image/svg+xml;charset=utf-8,%3Csvg%20height='${height}'%20width='${width}'%20xmlns='http://www.w3.org/2000/svg'%20version='1.1'%3E%3C/svg%3E\" style=\"max-width: 100%; display: block; position: static;\"></div>`\n  }\n\n  return sizer\n}\n\nconst Sizer: FunctionComponent<ILayoutWrapperProps> = function Sizer({\n  layout,\n  width,\n  height,\n}) {\n  if (layout === `fullWidth`) {\n    return (\n      <div aria-hidden style={{ paddingTop: `${(height / width) * 100}%` }} />\n    )\n  }\n\n  if (layout === `constrained`) {\n    return (\n      <div style={{ maxWidth: width, display: `block` }}>\n        <img\n          alt=\"\"\n          role=\"presentation\"\n          aria-hidden=\"true\"\n          src={`data:image/svg+xml;charset=utf-8,%3Csvg%20height='${height}'%20width='${width}'%20xmlns='http://www.w3.org/2000/svg'%20version='1.1'%3E%3C/svg%3E`}\n          style={{\n            maxWidth: `100%`,\n            display: `block`,\n            position: `static`,\n          }}\n        />\n      </div>\n    )\n  }\n\n  return null\n}\n\nexport const LayoutWrapper: FunctionComponent<\n  PropsWithChildren<ILayoutWrapperProps>\n> = function LayoutWrapper({ children, ...props }) {\n  return (\n    <Fragment>\n      <Sizer {...props} />\n      {children}\n\n      {SERVER ? <NativeScriptLoading /> : null}\n    </Fragment>\n  )\n}\n","import React, { FunctionComponent, ImgHTMLAttributes } from \"react\"\nimport * as PropTypes from \"prop-types\"\n\nexport interface IResponsiveImageProps {\n  sizes?: string\n  srcSet: string\n}\n\nexport type SourceProps = IResponsiveImageProps &\n  (\n    | {\n        media: string\n        type?: string\n      }\n    | {\n        media?: string\n        type: string\n      }\n  )\n\ntype FallbackProps = { src: string } & Partial<IResponsiveImageProps>\n\ntype ImageProps = ImgHTMLAttributes<HTMLImageElement> & {\n  src: string\n  alt: string\n  shouldLoad: boolean\n}\n\nexport type PictureProps = ImgHTMLAttributes<HTMLImageElement> & {\n  fallback?: FallbackProps\n  sources?: Array<SourceProps>\n  alt: string\n  shouldLoad?: boolean\n}\n\nconst Image: FunctionComponent<ImageProps> = function Image({\n  src,\n  srcSet,\n  loading,\n  alt = ``,\n  shouldLoad,\n  ...props\n}) {\n  return (\n    <img\n      {...props}\n      decoding=\"async\"\n      loading={loading}\n      src={shouldLoad ? src : undefined}\n      data-src={!shouldLoad ? src : undefined}\n      srcSet={shouldLoad ? srcSet : undefined}\n      data-srcset={!shouldLoad ? srcSet : undefined}\n      alt={alt}\n    />\n  )\n}\n\nexport const Picture: React.FC<PictureProps> = function Picture({\n  fallback,\n  sources = [],\n  shouldLoad = true,\n  ...props\n}) {\n  const sizes = props.sizes || fallback?.sizes\n  const fallbackImage = (\n    <Image {...props} {...fallback} sizes={sizes} shouldLoad={shouldLoad} />\n  )\n\n  if (!sources.length) {\n    return fallbackImage\n  }\n\n  return (\n    <picture>\n      {sources.map(({ media, srcSet, type }) => (\n        <source\n          key={`${media}-${type}-${srcSet}`}\n          type={type}\n          media={media}\n          srcSet={shouldLoad ? srcSet : undefined}\n          data-srcset={!shouldLoad ? srcSet : undefined}\n          sizes={sizes}\n        />\n      ))}\n      {fallbackImage}\n    </picture>\n  )\n}\n\nImage.propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: PropTypes.string.isRequired,\n  sizes: PropTypes.string,\n  srcSet: PropTypes.string,\n  shouldLoad: PropTypes.bool,\n}\n\nPicture.displayName = `Picture`\nPicture.propTypes = {\n  alt: PropTypes.string.isRequired,\n  shouldLoad: PropTypes.bool,\n  fallback: PropTypes.exact({\n    src: PropTypes.string.isRequired,\n    srcSet: PropTypes.string,\n    sizes: PropTypes.string,\n  }),\n  sources: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.exact({\n        media: PropTypes.string.isRequired,\n        type: PropTypes.string,\n        sizes: PropTypes.string,\n        srcSet: PropTypes.string.isRequired,\n      }),\n      PropTypes.exact({\n        media: PropTypes.string,\n        type: PropTypes.string.isRequired,\n        sizes: PropTypes.string,\n        srcSet: PropTypes.string.isRequired,\n      }),\n    ])\n  ),\n}\n","import React, { FunctionComponent, ImgHTMLAttributes } from \"react\"\nimport * as PropTypes from \"prop-types\"\nimport { Picture, SourceProps } from \"./picture\"\n\nexport type PlaceholderProps = ImgHTMLAttributes<HTMLImageElement> & {\n  fallback?: string\n  sources?: Array<SourceProps>\n}\n\nexport const Placeholder: FunctionComponent<PlaceholderProps> =\n  function Placeholder({ fallback, ...props }) {\n    if (fallback) {\n      return (\n        <Picture\n          {...props}\n          fallback={{\n            src: fallback,\n          }}\n          aria-hidden\n          alt=\"\"\n        />\n      )\n    } else {\n      return <div {...props}></div>\n    }\n  }\n\nPlaceholder.displayName = `Placeholder`\nPlaceholder.propTypes = {\n  fallback: PropTypes.string,\n  sources: Picture.propTypes?.sources,\n  alt: function (props, propName, componentName): Error | null {\n    if (!props[propName]) {\n      return null\n    }\n\n    return new Error(\n      `Invalid prop \\`${propName}\\` supplied to \\`${componentName}\\`. Validation failed.`\n    )\n  },\n}\n","import React from \"react\"\nimport { Picture, PictureProps } from \"./picture\"\n\nexport type MainImageProps = PictureProps\n\nexport const MainImage: React.FC<PictureProps> = function MainImage(props) {\n  return (\n    <>\n      <Picture {...props} />\n      <noscript>\n        <Picture {...props} shouldLoad={true} />\n      </noscript>\n    </>\n  )\n}\n\nMainImage.displayName = `MainImage`\nMainImage.propTypes = Picture.propTypes\n","import React from \"react\"\nimport { getWrapperProps, getMainProps, getPlaceholderProps } from \"./hooks\"\nimport { Placeholder } from \"./placeholder\"\nimport { MainImage, MainImageProps } from \"./main-image\"\nimport { LayoutWrapper } from \"./layout-wrapper\"\nimport PropTypes from \"prop-types\"\nimport type { FunctionComponent, WeakValidationMap } from \"react\"\nimport type { GatsbyImageProps, IGatsbyImageData } from \"./gatsby-image.browser\"\n\nconst removeNewLines = (str: string): string => str.replace(/\\n/g, ``)\n\nexport const GatsbyImage: FunctionComponent<GatsbyImageProps> =\n  function GatsbyImage({\n    as = `div`,\n    className,\n    class: preactClass,\n    style,\n    image,\n    loading = `lazy`,\n    imgClassName,\n    imgStyle,\n    backgroundColor,\n    objectFit,\n    objectPosition,\n    ...props\n  }) {\n    if (!image) {\n      console.warn(`[gatsby-plugin-image] Missing image prop`)\n      return null\n    }\n\n    if (preactClass) {\n      className = preactClass\n    }\n\n    imgStyle = {\n      objectFit,\n      objectPosition,\n      backgroundColor,\n      ...imgStyle,\n    }\n\n    const {\n      width,\n      height,\n      layout,\n      images,\n      placeholder,\n      backgroundColor: placeholderBackgroundColor,\n    } = image\n\n    const {\n      style: wStyle,\n      className: wClass,\n      ...wrapperProps\n    } = getWrapperProps(width, height, layout)\n\n    const cleanedImages: IGatsbyImageData[\"images\"] = {\n      fallback: undefined,\n      sources: [],\n    }\n    if (images.fallback) {\n      cleanedImages.fallback = {\n        ...images.fallback,\n        srcSet: images.fallback.srcSet\n          ? removeNewLines(images.fallback.srcSet)\n          : undefined,\n      }\n    }\n\n    if (images.sources) {\n      cleanedImages.sources = images.sources.map(source => {\n        return {\n          ...source,\n          srcSet: removeNewLines(source.srcSet),\n        }\n      })\n    }\n\n    return React.createElement(\n      as,\n      {\n        ...wrapperProps,\n        style: {\n          ...wStyle,\n          ...style,\n          backgroundColor,\n        },\n        className: `${wClass}${className ? ` ${className}` : ``}`,\n      },\n      <LayoutWrapper layout={layout} width={width} height={height}>\n        <Placeholder\n          {...getPlaceholderProps(\n            placeholder,\n            false,\n            layout,\n            width,\n            height,\n            placeholderBackgroundColor,\n            objectFit,\n            objectPosition\n          )}\n        />\n\n        <MainImage\n          data-gatsby-image-ssr=\"\"\n          className={imgClassName}\n          {...(props as Omit<\n            MainImageProps,\n            \"images\" | \"fallback\" | \"onError\" | \"onLoad\"\n          >)}\n          // When eager is set we want to start the isLoading state on true (we want to load the img without react)\n          {...getMainProps(\n            loading === `eager`,\n            false,\n            cleanedImages,\n            loading,\n            imgStyle\n          )}\n        />\n      </LayoutWrapper>\n    )\n  }\n\nexport const altValidator: PropTypes.Validator<string> = (\n  props: GatsbyImageProps,\n  propName,\n  componentName,\n  ...rest\n): Error | undefined => {\n  if (!props.alt && props.alt !== ``) {\n    return new Error(\n      `The \"alt\" prop is required in ${componentName}. If the image is purely presentational then pass an empty string: e.g. alt=\"\". Learn more: https://a11y-style-guide.com/style-guide/section-media.html`\n    )\n  }\n\n  return PropTypes.string(props, propName, componentName, ...rest)\n}\n\nexport const propTypes = {\n  image: PropTypes.object.isRequired,\n  alt: altValidator,\n} as WeakValidationMap<GatsbyImageProps>\n","import {\n  createElement,\n  memo,\n  useMemo,\n  useEffect,\n  useLayoutEffect,\n  useRef,\n} from \"react\"\nimport {\n  getWrapperProps,\n  gatsbyImageIsInstalled,\n  hasNativeLazyLoadSupport,\n} from \"./hooks\"\nimport { getSizer } from \"./layout-wrapper\"\nimport { propTypes } from \"./gatsby-image.server\"\nimport type {\n  FC,\n  ElementType,\n  FunctionComponent,\n  ImgHTMLAttributes,\n  CSSProperties,\n  ReactEventHandler,\n} from \"react\"\nimport type { renderImageToString } from \"./lazy-hydrate\"\nimport type { PlaceholderProps } from \"./placeholder\"\nimport type { MainImageProps } from \"./main-image\"\nimport type { Layout } from \"../image-utils\"\n\nconst imageCache = new Set<string>()\nlet renderImageToStringPromise\nlet renderImage: typeof renderImageToString | undefined\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport interface GatsbyImageProps\n  extends Omit<\n    ImgHTMLAttributes<HTMLImageElement>,\n    \"placeholder\" | \"onLoad\" | \"src\" | \"srcSet\" | \"width\" | \"height\"\n  > {\n  alt: string\n  as?: ElementType\n  className?: string\n  class?: string\n  imgClassName?: string\n  image: IGatsbyImageData\n  imgStyle?: CSSProperties\n  backgroundColor?: string\n  objectFit?: CSSProperties[\"objectFit\"]\n  objectPosition?: CSSProperties[\"objectPosition\"]\n  onLoad?: (props: { wasCached: boolean }) => void\n  onError?: ReactEventHandler<HTMLImageElement>\n  onStartLoad?: (props: { wasCached: boolean }) => void\n}\n\nexport interface IGatsbyImageData {\n  layout: Layout\n  width: number\n  height: number\n  backgroundColor?: string\n  images: Pick<MainImageProps, \"sources\" | \"fallback\">\n  placeholder?: Pick<PlaceholderProps, \"sources\" | \"fallback\">\n}\n\nconst GatsbyImageHydrator: FC<GatsbyImageProps> = function GatsbyImageHydrator({\n  as = `div`,\n  image,\n  style,\n  backgroundColor,\n  className,\n  class: preactClass,\n  onStartLoad,\n  onLoad,\n  onError,\n  ...props\n}) {\n  const { width, height, layout } = image\n  const {\n    style: wStyle,\n    className: wClass,\n    ...wrapperProps\n  } = getWrapperProps(width, height, layout)\n  const root = useRef<HTMLElement>()\n  const cacheKey = useMemo(() => JSON.stringify(image.images), [image.images])\n\n  // Preact uses class instead of className so we need to check for both\n  if (preactClass) {\n    className = preactClass\n  }\n\n  const sizer = getSizer(layout, width, height)\n\n  useEffect(() => {\n    if (!renderImageToStringPromise) {\n      renderImageToStringPromise = import(`./lazy-hydrate`).then(\n        ({ renderImageToString, swapPlaceholderImage }) => {\n          renderImage = renderImageToString\n\n          return {\n            renderImageToString,\n            swapPlaceholderImage,\n          }\n        }\n      )\n    }\n\n    // The plugin image component is a bit special where if it's server-side rendered, we add extra script tags to support lazy-loading without\n    // In this case we stop hydration but fire the correct events.\n    const ssrImage = root.current.querySelector(\n      `[data-gatsby-image-ssr]`\n    ) as HTMLImageElement\n    if (ssrImage && hasNativeLazyLoadSupport()) {\n      if (ssrImage.complete) {\n        // Trigger onStartload and onLoad events\n        onStartLoad?.({\n          wasCached: true,\n        })\n        onLoad?.({\n          wasCached: true,\n        })\n\n        // remove ssr key for state updates but add delay to not fight with native code snippt of gatsby-ssr\n        setTimeout(() => {\n          ssrImage.removeAttribute(`data-gatsby-image-ssr`)\n        }, 0)\n      } else {\n        onStartLoad?.({\n          wasCached: true,\n        })\n\n        ssrImage.addEventListener(`load`, function onLoadListener() {\n          ssrImage.removeEventListener(`load`, onLoadListener)\n\n          onLoad?.({\n            wasCached: true,\n          })\n          // remove ssr key for state updates but add delay to not fight with native code snippt of gatsby-ssr\n          setTimeout(() => {\n            ssrImage.removeAttribute(`data-gatsby-image-ssr`)\n          }, 0)\n        })\n      }\n\n      imageCache.add(cacheKey)\n\n      return\n    }\n\n    if (renderImage && imageCache.has(cacheKey)) {\n      return\n    }\n\n    let animationFrame\n    let cleanupCallback\n    renderImageToStringPromise.then(\n      ({ renderImageToString, swapPlaceholderImage }) => {\n        if (!root.current) {\n          return\n        }\n\n        root.current.innerHTML = renderImageToString({\n          isLoading: true,\n          isLoaded: imageCache.has(cacheKey),\n          image,\n          ...props,\n        })\n\n        if (!imageCache.has(cacheKey)) {\n          animationFrame = requestAnimationFrame(() => {\n            if (root.current) {\n              cleanupCallback = swapPlaceholderImage(\n                root.current,\n                cacheKey,\n                imageCache,\n                style,\n                onStartLoad,\n                onLoad,\n                onError\n              )\n            }\n          })\n        }\n      }\n    )\n\n    // eslint-disable-next-line consistent-return\n    return (): void => {\n      if (animationFrame) {\n        cancelAnimationFrame(animationFrame)\n      }\n      if (cleanupCallback) {\n        cleanupCallback()\n      }\n    }\n  }, [image])\n\n  // useLayoutEffect is ran before React commits to the DOM. This allows us to make sure our HTML is using our cached image version\n  useLayoutEffect(() => {\n    if (imageCache.has(cacheKey) && renderImage) {\n      root.current.innerHTML = renderImage({\n        isLoading: imageCache.has(cacheKey),\n        isLoaded: imageCache.has(cacheKey),\n        image,\n        ...props,\n      })\n\n      // Trigger onStartload and onLoad events\n      onStartLoad?.({\n        wasCached: true,\n      })\n      onLoad?.({\n        wasCached: true,\n      })\n    }\n  }, [image])\n\n  // By keeping all props equal React will keep the component in the DOM\n  return createElement(as, {\n    ...wrapperProps,\n    style: {\n      ...wStyle,\n      ...style,\n      backgroundColor,\n    },\n    className: `${wClass}${className ? ` ${className}` : ``}`,\n    ref: root,\n    dangerouslySetInnerHTML: {\n      __html: sizer,\n    },\n    suppressHydrationWarning: true,\n  })\n}\n\nexport const GatsbyImage: FunctionComponent<GatsbyImageProps> = memo(\n  function GatsbyImage(props) {\n    if (!props.image) {\n      if (process.env.NODE_ENV === `development`) {\n        console.warn(`[gatsby-plugin-image] Missing image prop`)\n      }\n\n      return null\n    }\n\n    if (!gatsbyImageIsInstalled() && process.env.NODE_ENV === `development`) {\n      console.warn(\n        `[gatsby-plugin-image] You're missing out on some cool performance features. Please add \"gatsby-plugin-image\" to your gatsby-config.js`\n      )\n    }\n\n    return createElement(GatsbyImageHydrator, props)\n  }\n)\n\nGatsbyImage.propTypes = propTypes\nGatsbyImage.displayName = `GatsbyImage`\n","import React, { FunctionComponent, ReactElement } from \"react\"\nimport {\n  altValidator,\n  GatsbyImage as GatsbyImageServer,\n} from \"./gatsby-image.server\"\nimport { GatsbyImageProps, IGatsbyImageData } from \"./gatsby-image.browser\"\nimport PropTypes from \"prop-types\"\nimport { ISharpGatsbyImageArgs } from \"../image-utils\"\n\nexport interface IStaticImageProps\n  extends Omit<GatsbyImageProps, \"image\">,\n    Omit<ISharpGatsbyImageArgs, \"backgroundColor\"> {\n  src: string\n  filename?: string\n}\n\n// These values are added by Babel. Do not add them manually\ninterface IPrivateProps {\n  __imageData?: IGatsbyImageData\n  __error?: string\n}\n\nexport function _getStaticImage(\n  GatsbyImage: FunctionComponent<GatsbyImageProps>\n): React.FC<IStaticImageProps & IPrivateProps> {\n  return function StaticImage({\n    src,\n    __imageData: imageData,\n    __error,\n    // We extract these because they're not meant to be passed-down to GatsbyImage\n    /* eslint-disable @typescript-eslint/no-unused-vars */\n    width,\n    height,\n    aspectRatio,\n    tracedSVGOptions,\n    placeholder,\n    formats,\n    quality,\n    transformOptions,\n    jpgOptions,\n    pngOptions,\n    webpOptions,\n    avifOptions,\n    blurredOptions,\n    breakpoints,\n    outputPixelDensities,\n    /* eslint-enable @typescript-eslint/no-unused-vars */\n    ...props\n  }): ReactElement {\n    if (__error) {\n      console.warn(__error)\n    }\n\n    if (imageData) {\n      return <GatsbyImage image={imageData} {...props} />\n    }\n    console.warn(`Image not loaded`, src)\n    if (!__error && process.env.NODE_ENV === `development`) {\n      console.warn(\n        `Please ensure that \"gatsby-plugin-image\" is included in the plugins array in gatsby-config.js, and that your version of gatsby is at least 2.24.78`\n      )\n    }\n    return null\n  }\n}\n\nconst StaticImage: React.FC<IStaticImageProps & IPrivateProps> =\n  _getStaticImage(GatsbyImageServer)\n\nconst checkDimensionProps: PropTypes.Validator<number> = (\n  props: IStaticImageProps & IPrivateProps,\n  propName: keyof IStaticImageProps & IPrivateProps,\n  ...rest\n) => {\n  if (\n    props.layout === `fullWidth` &&\n    (propName === `width` || propName === `height`) &&\n    props[propName]\n  ) {\n    return new Error(\n      `\"${propName}\" ${props[propName]} may not be passed when layout is fullWidth.`\n    )\n  }\n  return PropTypes.number(props, propName, ...rest)\n}\n\nconst validLayouts = new Set([`fixed`, `fullWidth`, `constrained`])\n\nexport const propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: altValidator,\n  width: checkDimensionProps,\n  height: checkDimensionProps,\n  sizes: PropTypes.string,\n  layout: (props: IStaticImageProps & IPrivateProps): Error | undefined => {\n    if (props.layout === undefined) {\n      return undefined\n    }\n    if (validLayouts.has(props.layout)) {\n      return undefined\n    }\n\n    return new Error(\n      `Invalid value ${props.layout}\" provided for prop \"layout\". Defaulting to \"constrained\". Valid values are \"fixed\", \"fullWidth\" or \"constrained\".`\n    )\n  },\n}\n\nStaticImage.displayName = `StaticImage`\nStaticImage.propTypes = propTypes\n\nexport { StaticImage }\n","import {\n  GatsbyImage as GatsbyImageBrowser,\n  IGatsbyImageData,\n} from \"./gatsby-image.browser\"\nimport React from \"react\"\nimport {\n  _getStaticImage,\n  propTypes,\n  IStaticImageProps,\n} from \"./static-image.server\"\n// These values are added by Babel. Do not add them manually\ninterface IPrivateProps {\n  __imageData?: IGatsbyImageData\n  __error?: string\n}\n\nconst StaticImage: React.FC<IStaticImageProps & IPrivateProps> =\n  _getStaticImage(GatsbyImageBrowser)\n\nStaticImage.displayName = `StaticImage`\nStaticImage.propTypes = propTypes\n\nexport { StaticImage }\n","import React from 'react';\nimport { graphql } from 'gatsby';\nimport { useLocation } from '@reach/router';\nimport { getSrc } from 'gatsby-plugin-image';\nimport * as seoData from '../../settings/seo.json';\n\nexport default function DefaultHead({ data, children }) {\n  const { pathname } = useLocation();\n  const metadata = { ...seoData, siteUrl: process.env.GATSBY_APP_URL };\n  const metaDescription = data?.description || metadata?.description;\n  const title = data?.title || metadata?.title;\n  const image = data?.ogimage?.childImageSharp\n    ? `${metadata.siteUrl}${getSrc(data?.ogimage)}`\n    : `${metadata.siteUrl}${metadata.image}`;\n\n  const fullTitle = `${title} ${metadata.separator} ${metadata.baseTitle}`;\n\n  return (\n    <>\n      <title id='t'>{fullTitle}</title>\n      <meta id='description' name='description' content={metaDescription} />\n      <meta id='ot' property='og:title' content={fullTitle} />\n      <meta\n        id='ou'\n        property='og:url'\n        content={`${metadata.siteUrl}${pathname}`}\n      />\n      <meta id='oty' property='og:type' content='website' />\n      <meta id='oi' property='og:image' content={image} />\n      <meta id='od' property='og:description' content={metaDescription} />\n      <meta id='tt' name='twitter:title' content={fullTitle} />\n      <meta id='ti' name='twitter:image' content={image} />\n      <meta id='td' name='twitter:description' content={metaDescription} />\n      {children}\n      <meta name='msapplication-TileColor' content={metadata.themeColor} />\n      <meta name='theme-color' content={metadata.themeColor} />\n      <meta name='twitter:card' content='summary_large_image' />\n      <link rel='canonical' href={`${metadata.siteUrl}${pathname}`} />\n      <link rel='manifest' href='/img/favicons/manifest.json' />\n      <link\n        rel='apple-touch-icon'\n        sizes='57x57'\n        href='/img/favicons/apple-icon-57x57.png'\n      />\n      <link\n        rel='apple-touch-icon'\n        sizes='60x60'\n        href='/img/favicons/apple-icon-60x60.png'\n      />\n      <link\n        rel='apple-touch-icon'\n        sizes='72x72'\n        href='/img/favicons/apple-icon-72x72.png'\n      />\n      <link\n        rel='apple-touch-icon'\n        sizes='76x76'\n        href='/img/favicons/apple-icon-76x76.png'\n      />\n      <link\n        rel='apple-touch-icon'\n        sizes='114x114'\n        href='/img/favicons/apple-icon-114x114.png'\n      />\n      <link\n        rel='apple-touch-icon'\n        sizes='120x120'\n        href='/img/favicons/apple-icon-120x120.png'\n      />\n      <link\n        rel='apple-touch-icon'\n        sizes='144x144'\n        href='/img/favicons/apple-icon-144x144.png'\n      />\n      <link\n        rel='apple-touch-icon'\n        sizes='152x152'\n        href='/img/favicons/apple-icon-152x152.png'\n      />\n      <link\n        rel='apple-touch-icon'\n        sizes='180x180'\n        href='/img/favicons/apple-icon-180x180.png'\n      />\n      <link\n        rel='icon'\n        type='image/png'\n        sizes='192x192'\n        href='/img/favicons/android-icon-192x192.png'\n      />\n      <link\n        rel='icon'\n        type='image/png'\n        sizes='32x32'\n        href='/img/favicons/favicon-32x32.png'\n      />\n      <link\n        rel='icon'\n        type='image/png'\n        sizes='96x96'\n        href='/img/favicons/favicon-96x96.png'\n      />\n      <link\n        rel='icon'\n        type='image/png'\n        sizes='16x16'\n        href='/img/favicons/favicon-16x16.png'\n      />\n      <meta\n        name='msapplication-TileImage'\n        content='/img/favicons/ms-icon-144x144.png'\n      />\n    </>\n  );\n}\n\nexport const query = graphql`\n  fragment Seo on MarkdownRemarkFrontmatter {\n    seo {\n      title\n      description\n      ogimage {\n        childImageSharp {\n          gatsbyImageData(\n            width: 1200\n            quality: 100\n            formats: [AUTO]\n            placeholder: NONE\n          )\n        }\n      }\n    }\n  }\n`;\n","import React from 'react';\n\nexport default function Footer() {\n  return (\n    <footer className='mt-auto py-5 bottom-0 w-full dark:bg-black bg-white dark:text-white text-black'>\n      <div className='container text-center mx-auto'>\n        <a\n          href='https://cleancommit.io?utm_source=HenloGatsby&utm_medium=referral'\n          className='text-center text-sm font-regular text-gray-400 hover:text-gray-500 transition-colors'>\n          Created by cleancommit.io\n        </a>\n      </div>\n    </footer>\n  );\n}\n","import React from 'react'\nimport { ThemeToggler } from 'gatsby-plugin-dark-mode'\n\nexport default function DarkmodeToggle() {\n  return (\n    <ThemeToggler>\n      {({ theme, toggleTheme }) => {\n        return (\n          <button\n            onClick={(e) => toggleTheme(theme === 'light' ? 'dark' : 'light')}\n          >\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              className=\"h-6 w-6 block dark:hidden\"\n              fill=\"none\"\n              viewBox=\"0 0 24 24\"\n              stroke=\"currentColor\"\n              strokeWidth={2}\n            >\n              <path\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                d=\"M20.354 15.354A9 9 0 018.646 3.646 9.003 9.003 0 0012 21a9.003 9.003 0 008.354-5.646z\"\n              />\n            </svg>\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              className=\"h-6 w-6 dark:block hidden\"\n              fill=\"none\"\n              viewBox=\"0 0 24 24\"\n              stroke=\"currentColor\"\n              strokeWidth={2}\n            >\n              <path\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                d=\"M12 3v1m0 16v1m9-9h-1M4 12H3m15.364 6.364l-.707-.707M6.343 6.343l-.707-.707m12.728 0l-.707.707M6.343 17.657l-.707.707M16 12a4 4 0 11-8 0 4 4 0 018 0z\"\n              />\n            </svg>\n            <div className=\"sr-only\">Switch color theme</div>\n          </button>\n        )\n      }}\n    </ThemeToggler>\n  )\n}\n","import React from 'react'\nimport nav from '../settings/main.json'\nimport Link from '../resolvers/Link'\n\nimport DarkmodeToggle from './DarkmodeToggle'\nimport Container from './UI/Container'\n\nexport default function Header() {\n  return (\n    <header className=\"flex h-16 border-b bg-white text-black dark:border-zinc-800 dark:bg-black dark:text-white\">\n      <Container className=\"m-auto flex items-center justify-between gap-20\">\n        <Link to=\"/\" className=\"text-2xl font-bold \">\n          Henlo.\n        </Link>\n        <div className=\"flex items-center\">\n          <nav className=\"flex gap-4\">\n            {nav.nav.map((item, i) => (\n              <Link to={item.permalink} key={i}>\n                {item.name}\n              </Link>\n            ))}\n          </nav>\n\n          <div className=\"ml-6 flex items-center border-l border-slate-200 pl-6 dark:border-zinc-800\">\n            <DarkmodeToggle />\n            <a\n              href=\"https://github.com/clean-commit/gatsby-starter-henlo\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              className=\"ml-4 block text-slate-400 transition-colors hover:text-slate-500 dark:hover:text-slate-300\"\n            >\n              <div className=\"sr-only\">Henlo on GitHub</div>\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                width=\"24\"\n                height=\"24\"\n                fill=\"none\"\n                stroke=\"currentColor\"\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                strokeWidth=\"2\"\n                viewBox=\"0 0 24 24\"\n              >\n                <path d=\"M9 19c-5 1.5-5-2.5-7-3m14 6v-3.87a3.37 3.37 0 00-.94-2.61c3.14-.35 6.44-1.54 6.44-7A5.44 5.44 0 0020 4.77 5.07 5.07 0 0019.91 1S18.73.65 16 2.48a13.38 13.38 0 00-7 0C6.27.65 5.09 1 5.09 1A5.07 5.07 0 005 4.77a5.44 5.44 0 00-1.5 3.78c0 5.42 3.3 6.61 6.44 7A3.37 3.37 0 009 18.13V22\"></path>\n              </svg>\n            </a>\n          </div>\n        </div>\n      </Container>\n    </header>\n  )\n}\n","import React from 'react'\n\nimport Footer from '@/components/Footer'\nimport Header from '@/components/Header'\n\nconst Layout = ({ nav = false, children }) => {\n  return (\n    <>\n      <div className=\"min-h-screen flex flex-col dark:bg-black bg-white \">\n        {nav && <Header />}\n        <main className=\"wrapper\">{children}</main>\n        <Footer />\n      </div>\n    </>\n  )\n}\n\nexport default Layout\n","import clsx from 'clsx'\nimport React from 'react'\n\nexport default function Container({ children, className }) {\n  return (\n    <div className={clsx('container mx-auto px-5 sm:px-10', className)}>\n      {children}\n    </div>\n  )\n}\n","import React from 'react'\nimport { Link as GatsbyLink } from 'gatsby'\n\nexport default function Link({ to, className, children, ...props }) {\n  const internal = /^\\/(?!\\/)/.test(to)\n  return (\n    <>\n      {!internal ? (\n        <a\n          href={to}\n          className={className}\n          target=\"_blank\"\n          {...props}\n          rel=\"noopener noreferrer\"\n        >\n          {children}\n        </a>\n      ) : (\n        <GatsbyLink to={to} className={className} {...props}>\n          {children}\n        </GatsbyLink>\n      )}\n    </>\n  )\n}\n","var toPropertyKey = require(\"./toPropertyKey.js\");\nfunction _defineProperty(obj, key, value) {\n  key = toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nmodule.exports = _defineProperty, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\nfunction toPrimitive(t, r) {\n  if (\"object\" != _typeof(t) || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != _typeof(i)) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\nmodule.exports = toPrimitive, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\nvar toPrimitive = require(\"./toPrimitive.js\");\nfunction toPropertyKey(t) {\n  var i = toPrimitive(t, \"string\");\n  return \"symbol\" == _typeof(i) ? i : String(i);\n}\nmodule.exports = toPropertyKey, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _typeof(o) {\n  \"@babel/helpers - typeof\";\n\n  return (module.exports = _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) {\n    return typeof o;\n  } : function (o) {\n    return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports), _typeof(o);\n}\nmodule.exports = _typeof, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;"],"names":["UPPERCASE","LOWERCASE","LEADING_CAPITAL","IDENTIFIER","SEPARATORS","LEADING_SEPARATORS","RegExp","source","SEPARATORS_AND_IDENTIFIER","NUMBERS_AND_IDENTIFIER","camelCase","input","options","Array","isArray","TypeError","pascalCase","preserveConsecutiveUppercase","map","x","trim","filter","length","join","toLowerCase","locale","string","toLocaleLowerCase","toUpperCase","toLocaleUpperCase","isLastCharLower","isLastCharUpper","isLastLastCharUpper","i","character","test","slice","preserveCamelCase","replace","lastIndex","m1","charAt","_","identifier","m","postProcess","module","exports","r","e","t","f","n","arguments","_interopRequireDefault","require","__esModule","_assertThisInitialized2","_inheritsLoose2","_defineProperty2","_react","_propTypes","ThemeToggler","_React$Component","_this","_len","args","_key","call","apply","this","concat","default","theme","window","__theme","_proto","prototype","componentDidMount","_this2","__onThemeChange","setState","toggleTheme","__setPreferredTheme","render","createElement","props","children","state","Component","propTypes","func","isRequired","_default","_ThemeToggler","W","hasNativeLazyLoadSupport","HTMLImageElement","a","Boolean","images","fallback","src","gatsbyImageData","gatsbyImage","childImageSharp","C","z","s","width","height","className","style","P","h","loading","shouldLoad","opacity","A","o","l","backgroundColor","position","top","left","bottom","right","objectFit","objectPosition","d","transition","H","F","_ref5","layout","paddingTop","maxWidth","display","alt","role","G","u","V","B","U","srcSet","decoding","Y","sources","sizes","_ref6","media","type","key","X","displayName","J","Z","Error","K","Q","ee","te","ae","c","ie","image","se","re","ne","Set","oe","le","de","as","class","g","onStartLoad","p","onLoad","onError","w","y","b","v","E","k","S","M","N","$","JSON","stringify","I","then","_ref7","renderImageToString","swapPlaceholderImage","current","querySelector","complete","wasCached","setTimeout","removeAttribute","addEventListener","removeEventListener","add","has","_ref8","innerHTML","isLoading","isLoaded","requestAnimationFrame","cancelAnimationFrame","ref","dangerouslySetInnerHTML","__html","suppressHydrationWarning","ce","he","ue","__imageData","__error","console","warn","ge","imgClassName","imgStyle","placeholder","pe","_len2","_key2","me","fe","we","DefaultHead","_ref","_data$ogimage","data","pathname","useLocation","metadata","seoData","siteUrl","process","GATSBY_APP_URL","metaDescription","description","title","ogimage","getSrc","fullTitle","separator","baseTitle","React","id","name","content","property","themeColor","rel","href","Footer","DarkmodeToggle","onClick","xmlns","fill","viewBox","stroke","strokeWidth","strokeLinecap","strokeLinejoin","Header","Container","Link","to","nav","item","permalink","target","clsx","internal","GatsbyLink","Object","assign","toPropertyKey","obj","value","defineProperty","enumerable","configurable","writable","_typeof","Symbol","toPrimitive","String","Number","iterator","constructor"],"sourceRoot":""}